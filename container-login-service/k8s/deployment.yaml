apiVersion: apps/v1
kind: Deployment
metadata:
  name: container-login-service
  namespace: dev
  labels:
    app.kubernetes.io/name: container-login-service
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: login-system
spec:
  replicas: 1  # ALWAYS EXACTLY ONE REPLICA

  # Deployment strategy to ensure only one pod runs at a time
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1

  selector:
    matchLabels:
      app.kubernetes.io/name: container-login-service
  
  template:
    metadata:
      labels:
        app.kubernetes.io/name: container-login-service
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/component: backend
    spec:
      containers:
      - name: container-login-service
        image: container-login-service:latest
        imagePullPolicy: Never
        
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        
        # 12-Factor: Config - Environment variables from shared .env-based secret
        envFrom:
        - secretRef:
            name: container-entra-auth-secret  # Shared secret from .env file (same as azure-graph-api-test)

        # Additional environment variables specific to container-login-service
        env:
        # AZURE_ENTRA_AUTH_SERVICE_URL is now provided by the secret
        - name: DEFAULT_PAGE_SIZE
          value: "20"
        - name: MAX_PAGE_SIZE
          value: "100"
        # No authentication credentials needed - this service acts as a proxy
        # All authentication is handled by azure-entra-auth-test service
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /actuator/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        # Resource limits - Increased for Spring Boot application
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
