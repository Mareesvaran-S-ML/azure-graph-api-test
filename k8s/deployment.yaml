apiVersion: apps/v1
kind: Deployment
metadata:
  name: container-entra-auth
  namespace: dev
  labels:
    app.kubernetes.io/name: container-entra-auth
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: container-entra-auth-system
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 1  # ALWAYS EXACTLY ONE REPLICA

  # Deployment strategy to ensure only one pod runs at a time
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1

  selector:
    matchLabels:
      app.kubernetes.io/name: container-entra-auth
  template:
    metadata:
      labels:
        app.kubernetes.io/name: container-entra-auth
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: container-entra-auth-system
    spec:
      # 12-Factor: Processes - Run as non-root user
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      
      containers:
      - name: container-entra-auth
        image: container-entra-auth:latest
        imagePullPolicy: IfNotPresent
        
        # 12-Factor: Port binding
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        
        # 12-Factor: Config - Environment variables from Secret only
        envFrom:
        - secretRef:
            name: container-entra-auth-secret

        # Additional environment variables specific to azure-graph-api-test
        env:
        - name: SERVER_PORT
          value: "8080"
        - name: SPRING_PROFILES_ACTIVE
          value: "k8s"  # Same as azure-entra-auth-test
        - name: AZURE_ENTRA_AUTH_SERVICE_URL
          value: "http://10.106.124.149:8080"
        - name: DEFAULT_PAGE_SIZE
          value: "20"
        - name: MAX_PAGE_SIZE
          value: "100"
        
        # 12-Factor: Disposability - Health checks (temporarily disabled)
        # livenessProbe:
        #   httpGet:
        #     path: /actuator/health
        #     port: http
        #     scheme: HTTP
        #   initialDelaySeconds: 90
        #   periodSeconds: 30
        #   timeoutSeconds: 10
        #   failureThreshold: 3

        # readinessProbe:
        #   httpGet:
        #     path: /actuator/health
        #     port: http
        #     scheme: HTTP
        #   initialDelaySeconds: 45
        #   periodSeconds: 10
        #   timeoutSeconds: 10
        #   failureThreshold: 3
        
        # Resource limits for better scheduling - Increased for Azure Graph API operations
        resources:
          requests:
            memory: "768Mi"
            cpu: "300m"
          limits:
            memory: "1.5Gi"
            cpu: "750m"
        
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        # Temporary filesystem for logs (12-Factor: Logs as event streams)
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-tmp
          mountPath: /app/tmp
      
      volumes:
      - name: tmp
        emptyDir: {}
      - name: app-tmp
        emptyDir: {}

      # DNS configuration for external connectivity
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - "8.8.8.8"
          - "8.8.4.4"
        searches:
          - "dev.svc.cluster.local"
          - "svc.cluster.local"
          - "cluster.local"
        options:
          - name: ndots
            value: "2"
          - name: edns0

      # Restart policy for resilience
      restartPolicy: Always
