apiVersion: apps/v1
kind: Deployment
metadata:
  name: container-entra-auth
  namespace: dev
  labels:
    app.kubernetes.io/name: container-entra-auth
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: container-entra-auth-system
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: container-entra-auth
  template:
    metadata:
      labels:
        app.kubernetes.io/name: container-entra-auth
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: container-entra-auth-system
    spec:
      # 12-Factor: Processes - Run as non-root user
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      
      containers:
      - name: container-entra-auth
        image: container-entra-auth:latest
        imagePullPolicy: IfNotPresent
        
        # 12-Factor: Port binding
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        
        # 12-Factor: Config - Environment variables from ConfigMap and Secret
        envFrom:
        - configMapRef:
            name: container-entra-auth-config
        - secretRef:
            name: container-entra-auth-secret
        
        # 12-Factor: Disposability - Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # Resource limits for better scheduling
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        # Temporary filesystem for logs (12-Factor: Logs as event streams)
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-tmp
          mountPath: /app/tmp
      
      volumes:
      - name: tmp
        emptyDir: {}
      - name: app-tmp
        emptyDir: {}

      # DNS configuration for external connectivity
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - "8.8.8.8"
          - "8.8.4.4"
        searches:
          - "dev.svc.cluster.local"
          - "svc.cluster.local"
          - "cluster.local"
        options:
          - name: ndots
            value: "2"
          - name: edns0

      # Restart policy for resilience
      restartPolicy: Always
